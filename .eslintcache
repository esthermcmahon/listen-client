[{"/Users/esthersanders/workspace/Listen-client/src/index.js":"1","/Users/esthersanders/workspace/Listen-client/src/components/Listen.js":"2","/Users/esthersanders/workspace/Listen-client/src/components/ApplicationViews.js":"3","/Users/esthersanders/workspace/Listen-client/src/components/Musicians/MusicianProvider.js":"4","/Users/esthersanders/workspace/Listen-client/src/components/Comments/CommentProvider.js":"5","/Users/esthersanders/workspace/Listen-client/src/components/Categories/CategoryProvider.js":"6","/Users/esthersanders/workspace/Listen-client/src/components/Recordings/RecordingProvider.js":"7","/Users/esthersanders/workspace/Listen-client/src/components/Connections/ConnectionProvider.js":"8","/Users/esthersanders/workspace/Listen-client/src/components/Goals/GoalProvider.js":"9","/Users/esthersanders/workspace/Listen-client/src/components/Auth/Login.js":"10","/Users/esthersanders/workspace/Listen-client/src/components/Auth/Register.js":"11","/Users/esthersanders/workspace/Listen-client/src/components/Nav/Nav.js":"12","/Users/esthersanders/workspace/Listen-client/src/components/Recordings/NewRecording.js":"13","/Users/esthersanders/workspace/Listen-client/src/components/Recordings/PlayRecording.js":"14","/Users/esthersanders/workspace/Listen-client/src/components/Excerpts/ExcerptProvider.js":"15","/Users/esthersanders/workspace/Listen-client/src/components/Excerpts/ExcerptForm.js":"16","/Users/esthersanders/workspace/Listen-client/src/components/Goals/GoalForm.js":"17"},{"size":400,"mtime":1607982805393,"results":"18","hashOfConfig":"19"},{"size":1414,"mtime":1607982805383,"results":"20","hashOfConfig":"19"},{"size":2047,"mtime":1608067474469,"results":"21","hashOfConfig":"19"},{"size":1205,"mtime":1607982805388,"results":"22","hashOfConfig":"19"},{"size":2186,"mtime":1607982805381,"results":"23","hashOfConfig":"19"},{"size":2285,"mtime":1607982805380,"results":"24","hashOfConfig":"19"},{"size":2980,"mtime":1607982805392,"results":"25","hashOfConfig":"19"},{"size":2322,"mtime":1607982805381,"results":"26","hashOfConfig":"19"},{"size":2419,"mtime":1608051086713,"results":"27","hashOfConfig":"19"},{"size":3353,"mtime":1607982805379,"results":"28","hashOfConfig":"19"},{"size":4155,"mtime":1607982805380,"results":"29","hashOfConfig":"19"},{"size":2171,"mtime":1608045933306,"results":"30","hashOfConfig":"19"},{"size":3436,"mtime":1607982805390,"results":"31","hashOfConfig":"19"},{"size":1876,"mtime":1607982805392,"results":"32","hashOfConfig":"19"},{"size":2542,"mtime":1608045982211,"results":"33","hashOfConfig":"19"},{"size":3514,"mtime":1608049710814,"results":"34","hashOfConfig":"19"},{"size":6472,"mtime":1608135541342,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1a1lzte",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/esthersanders/workspace/Listen-client/src/index.js",[],["80","81"],"/Users/esthersanders/workspace/Listen-client/src/components/Listen.js",[],"/Users/esthersanders/workspace/Listen-client/src/components/ApplicationViews.js",["82","83","84"],"//renders each imported component depending on the URl path \nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { CategoryProvider } from \"./Categories/CategoryProvider\"\nimport { CommentProvider } from \"./Comments/CommentProvider\"\nimport { ConnectionProvider } from \"./Connections/ConnectionProvider\"\nimport { GoalProvider } from \"./Goals/GoalProvider\"\nimport { MusicianProvider } from \"./Musicians/MusicianProvider\"\nimport { ExcerptProvider } from \"./Excerpts/ExcerptProvider\"\nimport { NewRecording } from \"./Recordings/NewRecording\";\nimport { PlayRecording } from \"./Recordings/PlayRecording\";\nimport { RecordingProvider } from \"./Recordings/RecordingProvider\"\nimport { ExcerptForm } from \"./Excerpts/ExcerptForm\";\nimport { GoalForm } from \"./Goals/GoalForm\"\n\nexport const ApplicationViews = (props) => {\n    return (\n        <>\n            <main\n                style={{\n                    margin: \"5rem 2rem\",\n                    lineHeight: \"1.75rem\",\n                }}>\n                <RecordingProvider>\n                    <Route exact path=\"/excerpts/:excerptId(\\d+)/newrecording\" render={props => <NewRecording {...props}/>} />\n                    <Route exact path=\"/recordings\" render={props => <PlayRecording {...props}/>} />\n                </RecordingProvider>\n\n                <ExcerptProvider>\n                    <Route exact path = \"/excerpts/create\" render={props => <ExcerptForm {...props}/>} />\n                    <Route exact path = \"/editexcerpt/:excerptId(\\d+)\" render = {props => <ExcerptForm {...props} />} />\n                </ExcerptProvider>\n                <CategoryProvider>\n                    <GoalProvider>\n                        <Route exact path = \"/goals/:recordingId(\\d+)/create\" render = {props => <GoalForm {...props} /> } />\n                        <Route exact path = \"/editgoal/:goalId(\\d+)/:recordingId(\\d+)\" render = {props => <GoalForm {...props} /> } />\n                    </GoalProvider>\n                </CategoryProvider>\n            </main>\n        </>\n\n    );\n};\n","/Users/esthersanders/workspace/Listen-client/src/components/Musicians/MusicianProvider.js",[],"/Users/esthersanders/workspace/Listen-client/src/components/Comments/CommentProvider.js",[],"/Users/esthersanders/workspace/Listen-client/src/components/Categories/CategoryProvider.js",[],"/Users/esthersanders/workspace/Listen-client/src/components/Recordings/RecordingProvider.js",["85"],"//module to handle all recording data manipulation\nimport React, { useState } from \"react\";\nexport const RecordingContext = React.createContext();\nexport const RecordingProvider = (props) => {\n  const [recordings, setRecordings] = useState([]);\n  const [recording, setRecording] = useState({});\n\n  const getRecordings = () => {\n    return fetch(\"http://localhost:8000/recordings\", {\n      headers: {\n        \"Authorization\": `Token ${localStorage.getItem(\"listen_user_id\")}`\n      }\n    })\n      .then((res) => res.json())\n      .then(setRecordings);\n  };\n\n  const createRecording = (recording) => {\n    return fetch(\"http://localhost:8000/recordings\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Token ${localStorage.getItem(\"listen_user_id\")}`\n      },\n      body: JSON.stringify(recording),\n    })\n      .then((res) => res.json())\n      .then(getRecordings);\n  };\n\n  const deleteRecording= (recordingId) => {\n    return fetch(`http://localhost:8000/recordings/${recordingId}`, {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Token ${localStorage.getItem(\"listen_user_id\")}`,\n        },\n    })\n        .then(getRecordings)\n  }\n\n  const editRecording = recording => {\n    return fetch(`http://localhost:8000/recordings/${recording.id}`, {\n        method: \"PUT\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Token ${localStorage.getItem(\"listen_user_id\")}`\n        },\n        body: JSON.stringify(recording)\n    })\n        .then(getRecordings)\n}\n\nconst getRecordingById = (id) => {\n  return fetch(`http://localhost:8000/recordings/${id}` , {\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"listen_user_id\")}`,\n        \"Content-Type\": \"application/json\",\n      }\n    })\n      .then(res => res.json())\n}\n\nconst getRecordingByExcerpt = (excerptId) => {\n    return fetch(`http://localhost:8000/recordings?excerpt=${excerptId}` , {\n        headers: {\n          Authorization: `Token ${localStorage.getItem(\"listen_user_id\")}`,\n          \"Content-Type\": \"application/json\",   \n        }   \n      })\n        .then(res => res.json())\n}\n\nconst getRecordingByMusician = (musicianId) => {\n    return fetch(`http://localhost:8000/recordings?musician=${musicianId}` , {\n        headers: {\n          Authorization: `Token ${localStorage.getItem(\"listen_user_id\")}`,\n          \"Content-Type\": \"application/json\",   \n        }   \n      })\n        .then(res => res.json())\n}\n\n  return (\n    <RecordingContext.Provider\n      value={{\n        recording,\n        setRecording,\n        recordings,\n        setRecording,\n        createRecording,\n        deleteRecording,\n        editRecording,\n        getRecordings,\n        getRecordingById,\n        getRecordingByExcerpt,\n        getRecordingByMusician\n      }}\n    >\n      {props.children}\n    </RecordingContext.Provider>\n  );\n};","/Users/esthersanders/workspace/Listen-client/src/components/Connections/ConnectionProvider.js",["86"],"//module to handle all connection data manipulation- getting categories, and creating categories\nimport React, { useState } from \"react\";\nexport const ConnectionContext = React.createContext();\nexport const ConnectionProvider = (props) => {\n  const [connections, setConnections] = useState([]);\n  const [connection, setConnection] = useState({});\n\n  const getConnections = () => {\n    return fetch(\"http://localhost:8000/connections\", {\n      headers: {\n        \"Authorization\": `Token ${localStorage.getItem(\"listen_user_id\")}`\n      }\n    })\n      .then((res) => res.json())\n      .then(setConnections);\n  };\n\n  const createConnection = (connection) => {\n    return fetch(\"http://localhost:8000/connections\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Token ${localStorage.getItem(\"listen_user_id\")}`\n      },\n      body: JSON.stringify(connection),\n    })\n      .then((res) => res.json())\n      .then(getConnections);\n  };\n\n  const deleteConnection= (connectionId) => {\n    return fetch(`http://localhost:8000/connections/${connectionId}`, {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Token ${localStorage.getItem(\"listen_user_id\")}`,\n        },\n    })\n        .then(getConnections)\n  }\n\n  const editConnection = connection => {\n    return fetch(`http://localhost:8000/connections/${connection.id}`, {\n        method: \"PUT\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Token ${localStorage.getItem(\"listen_user_id\")}`\n        },\n        body: JSON.stringify(connection)\n    })\n        .then(getConnections)\n}\n\nconst getConnectionById = (id) => {\n  return fetch(`http://localhost:8000/connections/${id}` , {\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"listen_user_id\")}`,\n        \"Content-Type\": \"application/json\",\n      }\n    })\n      .then(res => res.json())\n}\n\n  return (\n    <ConnectionContext.Provider\n      value={{\n        connection,\n        setConnection,\n        connections,\n        setConnection,\n        createConnection,\n        deleteConnection,\n        editConnection,\n        getConnectionById\n      }}\n    >\n      {props.children}\n    </ConnectionContext.Provider>\n  );\n};\n","/Users/esthersanders/workspace/Listen-client/src/components/Goals/GoalProvider.js",["87"],"//module to handle all goal data manipulation\nimport React, { useState } from \"react\";\nexport const GoalContext = React.createContext();\nexport const GoalProvider = (props) => {\n  const [goals, setGoals] = useState([]);\n  const [goal, setGoal] = useState({});\n\n  const getGoals = () => {\n    return fetch(\"http://localhost:8000/goals\", {\n      headers: {\n        \"Authorization\": `Token ${localStorage.getItem(\"listen_user_id\")}`\n      }\n    })\n      .then((res) => res.json())\n      .then(setGoals);\n  };\n\n  const createGoal = (goal) => {\n    return fetch(\"http://localhost:8000/goals\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Token ${localStorage.getItem(\"listen_user_id\")}`\n      },\n      body: JSON.stringify(goal),\n    })\n      .then((res) => res.json())\n      .then(getGoals);\n  };\n\n  const deleteGoal= (goalId) => {\n    return fetch(`http://localhost:8000/goals/${goalId}`, {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Token ${localStorage.getItem(\"listen_user_id\")}`,\n        },\n    })\n        .then(getGoals)\n  }\n\n  const editGoal = goal => {\n    return fetch(`http://localhost:8000/goals/${goal.id}`, {\n        method: \"PUT\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Token ${localStorage.getItem(\"listen_user_id\")}`\n        },\n        body: JSON.stringify(goal)\n    })\n        .then(getGoals)\n}\n\nconst getGoalById = (id) => {\n  return fetch(`http://localhost:8000/goals/${id}` , {\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"listen_user_id\")}`,\n        \"Content-Type\": \"application/json\",\n      }\n    })\n      .then(res => res.json())\n}\n\nconst getGoalByRecording = (recordingId) => {\n    return fetch(`http://localhost:8000/goals?recording=${recordingId}` , {\n        headers: {\n          Authorization: `Token ${localStorage.getItem(\"listen_user_id\")}`,\n          \"Content-Type\": \"application/json\",   \n        }   \n      })\n        .then(res => res.json())\n}\n\n  return (\n    <GoalContext.Provider\n      value={{\n        goal,\n        setGoal,\n        goals,\n        getGoals,\n        setGoal,\n        createGoal,\n        deleteGoal,\n        editGoal,\n        getGoalById,\n        getGoalByRecording\n      }}\n    >\n      {props.children}\n    </GoalContext.Provider>\n  );\n};\n","/Users/esthersanders/workspace/Listen-client/src/components/Auth/Login.js",["88","89"],"//login page\nimport React, { useRef, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  Anchor,\n  Box,\n  Button,\n  Form,\n  FormField,\n  Heading,\n  Layer,\n  TextInput,\n} from \"grommet\";\n\nexport const Login = (props) => {\n  const user = useRef();\n  const password = useRef();\n\n  const [show, setShow] = useState();\n  const [showUser, setShowUser] = useState();\n\n  // see if user already exists\n  const existingUserCheck = () => {\n    return fetch(`http://localhost:8000/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: user.current.value,\n        password: password.current.value,\n      }),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((user) => {\n        return user !== undefined ? user : false;\n      });\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    existingUserCheck().then((exists) => {\n      if (exists.valid) {\n        localStorage.setItem(\"listen_user_id\", exists.token);\n        props.history.push(\"/home\");\n      } else if (exists.valid != true) {\n        setShow(true);\n      } else if (!exists) {\n        setShowUser(true);\n      }\n    });\n  };\n\n  return (\n    <Box direction=\"column\" animation=\"fadeIn\">\n      <Box className=\"container--login\">\n        {showUser && (\n          <Layer>\n            <Heading level=\"3\">User does not exist</Heading>\n            <Button\n              label=\"Close\"\n              className=\"button--close\"\n              onClick={() => setShowUser(false)}\n            />\n          </Layer>\n        )}\n        {show && (\n          <Layer>\n            <Heading level=\"3\">Password does not match</Heading>\n            <Button\n              className=\"button--close\"\n              label=\"Close\"\n              primary\n              onClick={() => setShow(false)}\n            />\n          </Layer>\n        )}\n      </Box>\n      <Box direction=\"column\" alignSelf=\"center\">\n        <Heading level=\"1\">Listen</Heading>\n        <Heading level=\"2\">Sign In</Heading>\n        <Form className=\"form--login\" onSubmit={handleLogin}>\n          <FormField label=\"Username\" htmlFor=\"inputEmail\">\n            <TextInput\n              ref={user}\n              type=\"text\"\n              id=\"username\"\n              placeholder=\"User Name\"\n              required\n            />\n          </FormField>\n          <FormField label=\"Password\" htmlFor=\"inputPassword\">\n            <TextInput\n              ref={password}\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n              required\n            />\n          </FormField>\n          <FormField>\n            <Box align=\"center\" pad=\"medium\">\n              <Button\n                size=\"large\"\n                label=\"sign in\"\n                fill={false}\n                margin=\"small\"\n                pad=\"small\"\n                primary\n                type=\"submit\"\n              />\n            </Box>\n          </FormField>\n        </Form>\n      </Box>\n      <Box className=\"link--register\">\n        <Anchor\n          as={Link}\n          to=\"/register\"\n          title=\"register\"\n          href=\"/register\"\n          margin=\"small\"\n          justify=\"center\"\n        >\n          Not a member yet?\n        </Anchor>\n      </Box>\n    </Box>\n  );\n};","/Users/esthersanders/workspace/Listen-client/src/components/Auth/Register.js",[],"/Users/esthersanders/workspace/Listen-client/src/components/Nav/Nav.js",["90","91","92","93","94"],"//renders nav links that redirect user to various paths\nimport React, { useContext, useEffect } from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport { MusicianContext } from \"../Musicians/MusicianProvider\"\nimport { Anchor, Box, Heading, Image, Nav, Text } from \"grommet\"\n\nexport const NavBar = () => {\n    const history = useHistory()\n\n    // const { getCurrentUser, setCurrentUser, currentUser } = useContext(UserContext)\n\n    // useEffect(() => {\n    //     getCurrentUser().then( res =>\n    //         setCurrentUser(res)\n    //     )\n    // }, [])\n\n    return (\n        <Nav direction=\"row-responsive\" background=\"brand\" className=\"navbar\" pad=\"small\" align=\"baseline\">\n                {/* <Image alignSelf=\"center\" src={Logo} /> */}\n                <Box>\n                    <Box margin={{bottom:\"medium\"}}>\n                <Heading color=\"text-weak\" size=\"1\" margin={{bottom: \"0\"}}>Listen</Heading>\n                </Box>\n                <Box direction=\"row-responsive\" gap=\"small\" align=\"baseline\">\n                <Anchor color=\"text-weak\" as={Link} className=\"navbar__link\" to=\"/home\" label=\"Home\"/>\n                <Anchor color=\"text-weak\" as={Link} className=\"navbar__link\" to=\"/myconnections\" label=\"My Connections\"/>\n                <Anchor color=\"text-weak\" as={Link} className=\"navbar__link\" to=\"/excerpts/create\"label=\"New Excerpt\"/>\n                \n            {\n                (localStorage.getItem(\"listen_user_id\") !== null) ?\n                        <Anchor color=\"text-weak\" as={Link} className=\"navbar__item__fakeLink\"\n                            onClick={() => {\n                                localStorage.removeItem(\"listen_user_id\")\n                                history.push({ pathname: \"/\" })\n                            }}\n                        label=\"Logout\"/>\n                     :\n                    <>\n                            <Anchor as={Link} className=\"nav-link\" to=\"/login\" label=\"Login\"/>\n                            <Anchor as={Link} className=\"nav-link\" to=\"/register\" label=\"Register\"/>\n                    </>\n            }       \n            </Box> \n            </Box>\n            </Nav>\n    )\n}","/Users/esthersanders/workspace/Listen-client/src/components/Recordings/NewRecording.js",["95","96","97"],"import { Recorder } from 'react-voice-recorder'\nimport 'react-voice-recorder/dist/index.css'\nimport { RecordingContext } from \"./RecordingProvider\"\nimport React, { useContext, useState, useEffect } from \"react\"\nimport {\n  Box,\n  Button,\n  TextInput,\n  Text\n} from \"grommet\"\n\n\n\nexport const NewRecording = (props) => {\n  //set state state var and setter function \n  // use Effect when recording ends, reset state\n\n  const { getRecordings, createRecording } = useContext(RecordingContext)\n  const [currentRecording, setCurrentRecording] = useState({})\n  const excerptId = props.match.params.excerptId\n\n  const [audio, setAudio] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    getRecordings()\n  }, [])\n\n  const handleChange = (event) => {\n    const newRecordingState = Object.assign({}, currentRecording)\n    newRecordingState[event.target.name] = event.target.value\n    setCurrentRecording(newRecordingState)\n  }\n  const jsonDate = new Date(Date.now()).toJSON().slice(0, 10);\n\n  const constructNewRecording = () => {\n    const newRecording = {\n      label: currentRecording.label,\n      excerpt: excerptId,\n      audio: audio,\n      date: jsonDate\n\n    }\n\n    createRecording(newRecording)\n      .then(() => props.history.push(\"/home\"))\n  }\n\n\n  const uploadAudio = () => {\n    var reader = new FileReader()\n\n    reader.readAsDataURL(recorderState.blob)\n    reader.onloadend = function () {\n      var base64data = reader.result\n      // console.log(base64data)\n      const data = new FormData()\n      data.append('file', base64data)\n      data.append('upload_preset', 'zv6murma')\n      data.append('resource_type', 'video')\n      fetch(\"https://api.cloudinary.com/v1_1/dkicrisrl/upload\", {\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\"\n\n        },\n        body: data\n      })\n        .then(res => res.json())\n        .then(res => {\n          const audioresult = res\n          setAudio(audioresult.secure_url)\n        })   \n\n    }\n  }\n\n  const [recorderState, setRecorderState] = useState({\n    url: null,\n    blob: null,\n    chunks: null,\n    duration: {\n      h: 0,\n      m: 0,\n      s: 0\n    }\n  })\n\n  const handleAudioStop = (data) => {\n    console.log(data)\n    setRecorderState(data)\n    \n  }\n  \n  const handleAudioUpload = () => {\n    uploadAudio()\n  }\n\n  const handleReset = () => {\n    const reset = {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    };\n    setRecorderState(reset)\n  }\n\n\n  return (\n    <>\n      <Recorder\n        record={true}\n        title={\"New recording\"}\n        audioURL={recorderState.url}\n        showUIAudio\n        handleAudioStop={data => handleAudioStop(data)}\n        handleAudioUpload={data => handleAudioUpload(data)}\n        handleRest={() => handleReset()}\n\n      />\n\n\n      <Box>\n        <Text htmlFor=\"label\">Enter excerpt name and take: </Text>\n        <Box margin=\"small\">\n          <TextInput\n            type=\"text\"\n            name=\"label\"\n            required\n            autoFocus\n            placeholder=\"ex: Excerpt take 1\"\n            value={currentRecording.label}\n            onChange={handleChange}\n          />\n        </Box>\n      </Box>\n      <Button\n        fill={false}\n        primary\n        label=\"Save\"\n        onClick={(evt) => {\n          constructNewRecording(evt)\n            ;\n        }}\n      />\n\n\n    </>\n  )\n\n\n}\n\n","/Users/esthersanders/workspace/Listen-client/src/components/Recordings/PlayRecording.js",["98","99","100","101"],"//module to play a recording and render its date and label\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { RecordingContext } from \"./RecordingProvider\";\nimport { Button, Box, Heading, List, Text } from \"grommet\";\nimport { Link } from \"react-router-dom\";\n\nexport const PlayRecording = (props) => {\n  const { recordings, getRecordings } = useContext(RecordingContext);\n  \n//   let audioFile = new File([recordingObject.audio])\n\n  //gets the recordings from the database\n  useEffect(() => {\n    getRecordings();\n  }, []);\n\n\n  return (\n    <Box>\n      <Heading level=\"1\">Recordings</Heading>\n\n      <Box className=\"categoryList\" direction=\"row\">\n        <Box background=\"background-contrast\" elevation=\"small\">\n        <List data={recordings} primaryKey=\"label\" />\n        </Box>\n        <Box>\n\n        <audio controls>\n                        <source src=\"http://localhost:3000/21bce805-3519-4193-aabc-126b08896615\" type=\"audio/ogg\" format=\"audio/ogg\"></source>\n                        <source src=\"http://localhost:3000/21bce805-3519-4193-aabc-126b08896615\" type=\"audio/mpeg\" format=\"audio/mpeg\"></source>\n                            \n                    </audio>\n        \n\n          {recordings.map((recordingObject) => {\n            return (\n              <>\n                <Box direction=\"row\" align=\"center\">\n                    <Text>{recordingObject.label}</Text>\n                    <Text>{recordingObject.date}</Text>\n                    <audio controls>\n                        <source src={recordingObject.audio} type=\"audio/ogg\" format=\"audio/ogg\"></source>\n                        <source src={recordingObject.audio} type=\"audio/mpeg\" format=\"audio/mpeg\"></source>\n                            \n                    </audio>\n                </Box>\n              </>\n            );\n          })}\n        </Box>\n      </Box>\n    </Box>\n  );\n};","/Users/esthersanders/workspace/Listen-client/src/components/Excerpts/ExcerptProvider.js",[],"/Users/esthersanders/workspace/Listen-client/src/components/Excerpts/ExcerptForm.js",["102","103","104"],"//Form to let user create a new excerpt\nimport React, { useEffect, useContext, useState} from \"react\";\nimport { ExcerptContext } from \"./ExcerptProvider\";\nimport { Button, Box, Text, TextInput, Heading, Layer } from \"grommet\"\n\n\nexport const ExcerptForm = (props) => {\n  const { getExcerpts, createExcerpt, editExcerpt, getExcerptById } = useContext(ExcerptContext)\n  \n  const editMode = props.match.url.split(\"/\")[1] === \"editexcerpt\" //checks url to see if editMode\n\n  const [currentExcerpt, setCurrentExcerpt] = useState({})\n\n  //state variable and functions that change state of the state variable\n  const [open, setOpen] = useState();\n  const onOpen = () => setOpen(true);\n  const onClose = () => setOpen(undefined);\n\n  const showHideClassName = open ? \"modal display-block\" : \"modal display-none\";\n\n  //gets the excerpts from the database\n  useEffect(() => {\n    getExcerpts()\n  }, [])\n\n  useEffect(() => {\n    if (editMode) {\n      getExcerptById(parseInt(props.match.params.excerptId))\n        .then(excerpt => {\n          setCurrentExcerpt({\n            name: excerpt.name,\n            done: excerpt.done,\n            musician: excerpt.musician\n          })\n        })\n    }\n  }, [props.match.params.excerptId])\n\n  //function that is called when a change happens in the form. It sets the state variable that is imported via context.\n  //whatever the value that goes in the input (the evt) is being written as single property object with a key of 'type'\n  //and the value of the form input\n  const handleChange = (event) => {\n    const newExcerptState = Object.assign({}, currentExcerpt)\n    newExcerptState[event.target.name] = event.target.value\n    setCurrentExcerpt(newExcerptState)\n  }\n\n  return (\n\n    <Box align=\"center\" alignContent=\"center\">\n      <Box htmlFor=\"name\">\n        <Heading level=\"2\" className=\"name\">Excerpt</Heading>\n        <Box margin=\"small\">\n        <TextInput\n          type=\"text\"\n          name=\"name\"\n          value={currentExcerpt.name}\n          onChange={handleChange}\n        />\n        </Box>\n        \n      {editMode ? <Button primary margin=\"small\" label=\"EDIT\" className=\"edit_excerpt\" onClick={onOpen}/> : \"\"}\n      </Box>\n\n      {open && (\n\n        <Layer onEsc={onClose}\n        onClickOutside={onClose}\n        responsive={true}\n        position=\"center\"\n        >\n          <Box width=\"medium\" size=\"small\" margin=\"small\">\n            <Heading level=\"3\">Confirm</Heading>\n            <Text>Are you sure you want to make these changes?</Text>\n            <Box size=\"small\" direction=\"row-responsive\">\n              <Button primary label=\"Edit\" onClick={() => {\n                editExcerpt({\n                  id: props.match.params.excerptId,\n                  name: currentExcerpt.name,\n                  done: currentExcerpt.done\n                }).then(() => {\n                  props.history.push(\"/home\")\n                })\n              }}\n              margin=\"small\"\n              />\n           \n              <Button margin=\"small\" secondary label=\"Cancel\" onClick={onClose}/>\n            </Box>\n          </Box>\n        </Layer>\n\n\n      )}\n      {editMode ? \"\" :\n        <Button primary label = \"Create New Excerpt\"\n          type=\"submit\"\n          onClick={(evt) => {\n            evt.preventDefault();\n            debugger\n            createExcerpt({\n              name: currentExcerpt.name,\n              done: false,\n            })\n              .then(() => props.history.push(\"/home\"))\n          }}\n         \n        />\n      }\n    </Box>\n\n  );\n};\n","/Users/esthersanders/workspace/Listen-client/src/components/Goals/GoalForm.js",["105","106","107","108","109","110","111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":5,"column":10,"nodeType":"118","messageId":"119","endLine":5,"endColumn":25},{"ruleId":"116","severity":1,"message":"120","line":6,"column":10,"nodeType":"118","messageId":"119","endLine":6,"endColumn":28},{"ruleId":"116","severity":1,"message":"121","line":8,"column":10,"nodeType":"118","messageId":"119","endLine":8,"endColumn":26},{"ruleId":"122","severity":1,"message":"123","line":90,"column":9,"nodeType":"124","messageId":"125","endLine":90,"endColumn":21},{"ruleId":"122","severity":1,"message":"126","line":70,"column":9,"nodeType":"124","messageId":"125","endLine":70,"endColumn":22},{"ruleId":"122","severity":1,"message":"127","line":81,"column":9,"nodeType":"124","messageId":"125","endLine":81,"endColumn":16},{"ruleId":"116","severity":1,"message":"128","line":3,"column":16,"nodeType":"118","messageId":"119","endLine":3,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":48,"column":31,"nodeType":"131","messageId":"125","endLine":48,"endColumn":33},{"ruleId":"116","severity":1,"message":"132","line":2,"column":17,"nodeType":"118","messageId":"119","endLine":2,"endColumn":27},{"ruleId":"116","severity":1,"message":"133","line":2,"column":29,"nodeType":"118","messageId":"119","endLine":2,"endColumn":38},{"ruleId":"116","severity":1,"message":"134","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":25},{"ruleId":"116","severity":1,"message":"135","line":5,"column":32,"nodeType":"118","messageId":"119","endLine":5,"endColumn":37},{"ruleId":"116","severity":1,"message":"136","line":5,"column":44,"nodeType":"118","messageId":"119","endLine":5,"endColumn":48},{"ruleId":"116","severity":1,"message":"137","line":23,"column":10,"nodeType":"118","messageId":"119","endLine":23,"endColumn":17},{"ruleId":"116","severity":1,"message":"138","line":23,"column":19,"nodeType":"118","messageId":"119","endLine":23,"endColumn":29},{"ruleId":"139","severity":1,"message":"140","line":27,"column":6,"nodeType":"141","endLine":27,"endColumn":8,"suggestions":"142"},{"ruleId":"116","severity":1,"message":"143","line":2,"column":40,"nodeType":"118","messageId":"119","endLine":2,"endColumn":48},{"ruleId":"116","severity":1,"message":"144","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":16},{"ruleId":"116","severity":1,"message":"145","line":5,"column":10,"nodeType":"118","messageId":"119","endLine":5,"endColumn":14},{"ruleId":"139","severity":1,"message":"140","line":15,"column":6,"nodeType":"141","endLine":15,"endColumn":8,"suggestions":"146"},{"ruleId":"116","severity":1,"message":"147","line":19,"column":9,"nodeType":"118","messageId":"119","endLine":19,"endColumn":26},{"ruleId":"139","severity":1,"message":"148","line":24,"column":6,"nodeType":"141","endLine":24,"endColumn":8,"suggestions":"149"},{"ruleId":"139","severity":1,"message":"150","line":37,"column":6,"nodeType":"141","endLine":37,"endColumn":36,"suggestions":"151"},{"ruleId":"116","severity":1,"message":"152","line":5,"column":56,"nodeType":"118","messageId":"119","endLine":5,"endColumn":62},{"ruleId":"116","severity":1,"message":"153","line":5,"column":75,"nodeType":"118","messageId":"119","endLine":5,"endColumn":79},{"ruleId":"116","severity":1,"message":"154","line":9,"column":11,"nodeType":"118","messageId":"119","endLine":9,"endColumn":19},{"ruleId":"116","severity":1,"message":"155","line":9,"column":56,"nodeType":"118","messageId":"119","endLine":9,"endColumn":74},{"ruleId":"116","severity":1,"message":"147","line":21,"column":9,"nodeType":"118","messageId":"119","endLine":21,"endColumn":26},{"ruleId":"139","severity":1,"message":"156","line":41,"column":6,"nodeType":"141","endLine":41,"endColumn":8,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":173,"column":13,"nodeType":"160","messageId":"161","endLine":186,"endColumn":30},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'CommentProvider' is defined but never used.","Identifier","unusedVar","'ConnectionProvider' is defined but never used.","'MusicianProvider' is defined but never used.","no-dupe-keys","Duplicate key 'setRecording'.","ObjectExpression","unexpected","Duplicate key 'setConnection'.","Duplicate key 'setGoal'.","'useHistory' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'useContext' is defined but never used.","'useEffect' is defined but never used.","'MusicianContext' is defined but never used.","'Image' is defined but never used.","'Text' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRecordings'. Either include it or remove the dependency array.","ArrayExpression",["164"],"'useState' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.",["165"],"'showHideClassName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getExcerpts'. Either include it or remove the dependency array.",["166"],"React Hook useEffect has missing dependencies: 'editMode' and 'getExcerptById'. Either include them or remove the dependency array.",["167"],"'Select' is defined but never used.","'Form' is defined but never used.","'getGoals' is assigned a value but never used.","'getGoalByRecording' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'editMode', 'getCategories', 'getGoalById', and 'props.match.params.goalId'. Either include them or remove the dependency array.",["168"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"169","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [getRecordings]",{"range":"178","text":"179"},{"range":"180","text":"179"},"Update the dependencies array to be: [getExcerpts]",{"range":"181","text":"182"},"Update the dependencies array to be: [editMode, getExcerptById, props.match.params.excerptId]",{"range":"183","text":"184"},"Update the dependencies array to be: [editMode, getCategories, getGoalById, props.match.params.goalId]",{"range":"185","text":"186"},[735,737],"[getRecordings]",[540,542],[887,889],"[getExcerpts]",[1188,1218],"[editMode, getExcerptById, props.match.params.excerptId]",[1520,1522],"[editMode, getCategories, getGoalById, props.match.params.goalId]"]